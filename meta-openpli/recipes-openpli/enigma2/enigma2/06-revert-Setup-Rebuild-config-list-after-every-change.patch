From cd4a5f9ba2b6e114132eb1b4b7da812c8f86981e Mon Sep 17 00:00:00 2001
From: Hains van den Bosch <hainsvdbosch@ziggo.nl>
Date: Fri, 2 Mar 2018 14:54:49 +0100
Subject: [PATCH] Revert "Setup: Rebuild config list after every change"

Margin before/after recordings can now be just one digit.

This reverts commit 9857d22c6f649f076a2c83827de54f2b6318500f.
---
 lib/python/Screens/Setup.py | 43 +++++++++++++++++++++++--------------------
 1 file changed, 23 insertions(+), 20 deletions(-)

diff --git a/lib/python/Screens/Setup.py b/lib/python/Screens/Setup.py
index bd666a7e2..6a68e769a 100644
--- a/lib/python/Screens/Setup.py
+++ b/lib/python/Screens/Setup.py
@@ -64,13 +64,20 @@ class Setup(ConfigListScreen, Screen):
 
 	ALLOW_SUSPEND = True
 
-	def refill(self):
-		self.list = []
+	def removeNotifier(self):
+		config.usage.setup_level.notifiers.remove(self.levelChanged)
+
+	def levelChanged(self, configElement):
+		list = []
+		self.refill(list)
+		self["config"].setList(list)
+
+	def refill(self, list):
 		xmldata = setupdom.getroot()
 		for x in xmldata.findall("setup"):
 			if x.get("key") != self.setup:
 				continue
-			self.addItems(x)
+			self.addItems(list, x)
 			self.setup_title = x.get("title", "").encode("UTF-8")
 			self.seperation = int(x.get('separation', '0'))
 
@@ -78,8 +85,10 @@ class Setup(ConfigListScreen, Screen):
 		Screen.__init__(self, session)
 		# for the skin: first try a setup_<setupID>, then Setup
 		self.skinName = ["setup_" + setup, "Setup" ]
-		self.list = []
+
 		self.setup = setup
+		list = []
+		self.refill(list)
 
 		#check for list.entries > 0 else self.close
 		self["key_red"] = StaticText(_("Cancel"))
@@ -93,29 +102,27 @@ class Setup(ConfigListScreen, Screen):
 				"menu": self.closeRecursive,
 			}, -2)
 
-		self.refill()
-		ConfigListScreen.__init__(self, self.list, session = session, on_change = self.changedEntry)
+		ConfigListScreen.__init__(self, list, session = session, on_change = self.changedEntry)
+
+		self.changedEntry()
 		self.setTitle(_(self.setup_title))
 
-	def addItems(self, parentNode):
+	def addItems(self, list, parentNode):
 		for x in parentNode:
 			if not x.tag:
 				continue
 			if x.tag == 'item':
 				item_level = int(x.get("level", 0))
 
+				if not self.levelChanged in config.usage.setup_level.notifiers:
+					config.usage.setup_level.notifiers.append(self.levelChanged)
+					self.onClose.append(self.removeNotifier)
+
 				if item_level > config.usage.setup_level.index:
 					continue
 
 				requires = x.get("requires")
-				if requires:
-					if requires[0] == '!':
-						if SystemInfo.get(requires[1:], False):
-							continue
-					elif not SystemInfo.get(requires, False):
-						continue
-				configCondition = x.get("configcondition")
-				if configCondition and not eval(configCondition + ".value"):
+				if requires and not SystemInfo.get(requires, False):
 					continue
 
 				item_text = _(x.get("text", "??").encode("UTF-8"))
@@ -128,11 +135,7 @@ class Setup(ConfigListScreen, Screen):
 				# the first b is the item itself, ignored by the configList.
 				# the second one is converted to string.
 				if not isinstance(item, ConfigNothing):
-					self.list.append((item_text, item, item_description))
-
-	def changedEntry(self):
-		self.refill()
-		self["config"].setList(self.list)
+					list.append((item_text, item, item_description))
 
 def getSetupTitle(id):
 	xmldata = setupdom.getroot()
-- 
2.15.1

