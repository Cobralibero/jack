diff --git a/IPTVPlayer/components/configextmovieplayer.py b/IPTVPlayer/components/configextmovieplayer.py
index c88e0cdc..bdd66afd 100644
--- a/IPTVPlayer/components/configextmovieplayer.py
+++ b/IPTVPlayer/components/configextmovieplayer.py
@@ -20,7 +20,6 @@ import skin
 from enigma import eLabel, getDesktop
 from Screens.MessageBox import MessageBox
 from Components.config import config, ConfigSelection, ConfigYesNo, Config, ConfigInteger, getConfigListEntry, configfile
-from boxbranding import getImageArch
 ###################################################
 config.plugins.iptvplayer.extplayer_summary = ConfigSelection(default="yes", choices=[('auto', _('Auto')), ('yes', _('Yes')), ('no', _('No'))])
 config.plugins.iptvplayer.use_clear_iframe = ConfigYesNo(default=False)
@@ -318,8 +317,7 @@ class ConfigExtMoviePlayer(ConfigBaseWidget, ConfigExtMoviePlayerBase):
         list.append(getConfigListEntry("    " + _("Use software decoder for the %s") % 'DTS', config.plugins.iptvplayer.dts_software_decode))
         list.append(getConfigListEntry("    " + _("Use software decoder for the %s") % 'WMA', config.plugins.iptvplayer.wma_software_decode))
         list.append(getConfigListEntry("    " + _("Use software decoder for the %s") % 'MP3', config.plugins.iptvplayer.mp3_software_decode))
-        if getImageArch() != "sh4":
-            list.append(getConfigListEntry("    " + _("Software decoding as"), config.plugins.iptvplayer.software_decode_as))
+        list.append(getConfigListEntry("    " + _("Software decoding as"), config.plugins.iptvplayer.software_decode_as))
         list.append(getConfigListEntry("    " + _("Stereo downmix mode for software decoder"), config.plugins.iptvplayer.stereo_software_decode))
         if self.ac3_mix_avaliable:
             list.append(getConfigListEntry(_("AC3 downmix mode"), config.plugins.iptvplayer.ac3_mix))
@@ -370,7 +368,7 @@ class ConfigExtMoviePlayer(ConfigBaseWidget, ConfigExtMoviePlayerBase):
         list.append(getConfigListEntry(_("Show iframe during audio playback"), config.plugins.iptvplayer.show_iframe))
         if config.plugins.iptvplayer.show_iframe.value:
             list.append(getConfigListEntry("    " + _("Radio iframe file"), config.plugins.iptvplayer.iframe_file))
-        if getImageArch() != "sh4" and (config.plugins.iptvplayer.show_iframe.value or config.plugins.iptvplayer.use_clear_iframe.value):
+        if config.plugins.iptvplayer.show_iframe.value or config.plugins.iptvplayer.use_clear_iframe.value:
             list.append(getConfigListEntry("    " + _("Black iframe file"), config.plugins.iptvplayer.clear_iframe_file))
         self.list = list
         ConfigBaseWidget.runSetup(self)
diff --git a/IPTVPlayer/components/iptvplayerwidget.py b/IPTVPlayer/components/iptvplayerwidget.py
index b7a84791..16e9324f 100644
--- a/IPTVPlayer/components/iptvplayerwidget.py
+++ b/IPTVPlayer/components/iptvplayerwidget.py
@@ -28,7 +28,6 @@ from Tools.BoundFunction import boundFunction
 from Tools.LoadPixmap import LoadPixmap
 from Tools.Directories import fileExists
 from enigma import getDesktop, eTimer
-from boxbranding import getImageArch
 ####################################################
 #                   IPTV components
 ####################################################
@@ -1729,10 +1728,7 @@ class E2iPlayerWidget(Screen):
                     gstAdditionalParams['show_iframe'] = config.plugins.iptvplayer.show_iframe.value
                     gstAdditionalParams['iframe_file_start'] = config.plugins.iptvplayer.iframe_file.value
                     gstAdditionalParams['iframe_file_end'] = config.plugins.iptvplayer.clear_iframe_file.value
-                    if getImageArch() == "sh4":
-                        gstAdditionalParams['iframe_continue'] = True
-                    else:
-                        gstAdditionalParams['iframe_continue'] = False
+                    gstAdditionalParams['iframe_continue'] = False
 
                 self.writeCurrentTitleToFile(titleOfMovie)
                 if isBufferingMode:
@@ -1751,14 +1747,8 @@ class E2iPlayerWidget(Screen):
                             playerVal = 'gstplayer'
                             gstAdditionalParams['download-buffer-path'] = ''
                             gstAdditionalParams['ring-buffer-max-size'] = 0
-                            if getImageArch() == "sh4": # use default value, due to small amount of RAM
-                                #use the default value, due to small amount of RAM
-                                #in the future it will be configurable
-                                gstAdditionalParams['buffer-duration'] = -1
-                                gstAdditionalParams['buffer-size'] = 0
-                            else:
-                                gstAdditionalParams['buffer-duration'] = 18000 # 300min
-                                gstAdditionalParams['buffer-size'] = 10240 # 10MB
+                            gstAdditionalParams['buffer-duration'] = 18000 # 300min
+                            gstAdditionalParams['buffer-size'] = 10240 # 10MB
                         else:
                             assert("exteplayer" == player.value)
                             playerVal = 'eplayer'
diff --git a/IPTVPlayer/iptvdm/iptvdmui.py b/IPTVPlayer/iptvdm/iptvdmui.py
index f14b0abb..ab8aadb2 100644
--- a/IPTVPlayer/iptvdm/iptvdmui.py
+++ b/IPTVPlayer/iptvdm/iptvdmui.py
@@ -30,7 +30,6 @@ from Components.ActionMap import ActionMap
 from Components.Label import Label
 from Components.Sources.StaticText import StaticText
 from os import chmod as os_chmod, path as os_path, remove as os_remove
-from boxbranding import getImageArch
 ###################################################
 
 #########################################################
@@ -333,10 +332,7 @@ class IPTVDMWidget(Screen):
                         additionalParams['show_iframe'] = config.plugins.iptvplayer.show_iframe.value
                         additionalParams['iframe_file_start'] = config.plugins.iptvplayer.iframe_file.value
                         additionalParams['iframe_file_end'] = config.plugins.iptvplayer.clear_iframe_file.value
-                        if getImageArch() == "sh4":
-                            additionalParams['iframe_continue'] = True
-                        else:
-                            additionalParams['iframe_continue'] = False
+                        additionalParams['iframe_continue'] = False
 
                     if "exteplayer" == player:
                         self.session.openWithCallback(self.leaveMoviePlayer, IPTVExtMoviePlayer, item.fileName, title, None, 'eplayer', additionalParams)
diff --git a/IPTVPlayer/tools/iptvtools.py b/IPTVPlayer/tools/iptvtools.py
index b07b0e67..e541d1ad 100644
--- a/IPTVPlayer/tools/iptvtools.py
+++ b/IPTVPlayer/tools/iptvtools.py
@@ -29,7 +29,6 @@ import os
 import stat
 import codecs
 import datetime
-from boxbranding import getImageArch
 
 SERVER_DOMAINS = {'vline': 'http://iptvplayer.vline.pl/', 'gitlab': 'http://zadmario.gitlab.io/'}
 SERVER_UPDATE_PATH = {'vline': 'download/update2/', 'gitlab': 'update2/'}
@@ -126,10 +125,7 @@ def GetNice(pid=None):
 
 
 def E2PrioFix(cmd, factor=2):
-    if getImageArch() != "sh4":
-        return 'nice -n %d %s' % (GetNice() + factor, cmd)
-    else:
-        return cmd
+    return 'nice -n %d %s' % (GetNice() + factor, cmd)
 
 
 def GetDefaultLang(full=False):
