From fe5f3cb9283f5067a3e8b327e8647d07b83266c5 Mon Sep 17 00:00:00 2001
From: Hains van den Bosch <hainsvdbosch@ziggo.nl>
Date: Sun, 1 Apr 2018 11:38:14 +0200
Subject: [PATCH] 029-move-field-atomic-flags-to-the-bottom-of-structure

Adding a field of datatype 'unsigned long' in the middle between the other 'tasks states' is too big
and causes a kernel panic.
Field 'atomic_flags' may have a datatype of 'short' but not int, long or long long.
Or a bit field with a depth of 16 bit or fewer.
This is probably caused by added code by the 001-linux-dreambox-kernel.patch.

But the arguments of functions set_bit(),clear_bits() and test_bits() expecting a datatype of 'unsigned long'.
Well, simply moving atomic_flags to the buttom of structure task_struct
causing no kernel panic and the box boot flawlessly.

Remove the 2 patches which reverts commits:
https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v3.2.101&id=4fce5e64991fc0a02e47e525ce72f33def17b7ef
and
https://git.kernel.org/pub/scm/linux/kernel/git/stable/linux-stable.git/commit/?h=v3.2.101&id=4fce5e64991fc0a02e47e525ce72f33def17b7ef
---
 include/linux/sched.h | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/include/linux/sched.h b/include/linux/sched.h
index 2d4ab76..074b33b 100644
--- a/include/linux/sched.h
+++ b/include/linux/sched.h
@@ -1313,8 +1313,6 @@ struct task_struct {
 	unsigned sched_reset_on_fork:1;
 	unsigned sched_contributes_to_load:1;
 
-	unsigned long atomic_flags; /* Flags needing atomic access. */
-
 	pid_t pid;
 	pid_t tgid;
 
@@ -1585,6 +1583,9 @@ struct task_struct {
 #ifdef CONFIG_HAVE_HW_BREAKPOINT
 	atomic_t ptrace_bp_refcnt;
 #endif
+
+	unsigned long atomic_flags ; /* Flags needing atomic access. */
+
 };
 
 /* Future-safe accessor for struct task_struct's cpus_allowed. */
-- 
2.15.1

